{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\javascript\\\\app\\\\src\\\\components\\\\Char.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n//import { Button } from \"bootstrap\";\n\n// Register the required components for the chart\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n// Register necessary components\n//let result;\n\nexport default function Char() {\n  _s();\n  const [mapData, setMapData] = useState([]);\n  const [dataSet, setDataSet] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\"\n        }\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      setMapData(data);\n      console.log(data);\n    }\n    getData();\n  }, []);\n  let labels = [],\n    k = [],\n    datasts = [],\n    inc = 10,\n    dec = 10;\n  function incr() {\n    // setDataPoints((value) => ++value);\n    // datasts.splice(0, dataPoints);\n  }\n  const decr = () => {\n    setDataSet(value => value.splice(0, 1));\n    // datasts = datasts.splice(19, 1);\n  };\n  if (mapData.data && mapData.data.nearby_stores && mapData.data.nearby_stores.stores && !Array.isArray(mapData)) {\n    k = mapData.data.nearby_stores.stores;\n    labels = k.map(item => item.location_name);\n    labels = labels.splice(0);\n    console.log(labels);\n    var test = k.map(item => item.distance);\n    setMapData(test);\n    //datasts = k.map((item) => item.distance);\n    //datasts = datasts.splice(0, 20);\n    //console.log(datasts);\n  }\n  /*\r\n  const data = {\r\n    labels: labels.splice(0, 20),\r\n    datasets: [\r\n      {\r\n        label: \"Api Data Fetched for Location distance wise \",\r\n        data: datasts.splice(0, 20),\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n    const options = {\r\n    responsive: true, // Makes the chart responsive\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Nearby Store Distances\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true, // y-axis starts at 0\r\n      },\r\n    },\r\n  };\r\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: mapData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        height: \"400px\",\n        margin: \"0 auto\",\n        padding: \"20px\",\n        backgroundColor: \"#f9f9f9\",\n        borderRadius: \"10px\",\n        boxShadow: \"4px 4px 15px rgba(15, 15, 15, 0.1)\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: labels,\n          datasets: [{\n            label: \"Api Data Fetched for Location distance wise \",\n            data: mapData,\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            borderWidth: 1\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        onClick: incr,\n        children: \"INCREASE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success\",\n        onClick: decr,\n        children: \"DECREASE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Char, \"cxPisM77m4BuxQ7NLG/v5FM2+kY=\");\n_c = Char;\nvar _c;\n$RefreshReg$(_c, \"Char\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Char","_s","mapData","setMapData","dataSet","setDataSet","getData","url","options","method","headers","response","fetch","data","json","console","log","labels","k","datasts","inc","dec","incr","decr","value","splice","nearby_stores","stores","Array","isArray","map","item","location_name","test","distance","children","style","width","height","margin","padding","backgroundColor","borderRadius","boxShadow","datasets","label","borderColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/javascript/app/src/components/Char.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n//import { Button } from \"bootstrap\";\r\n\r\n// Register the required components for the chart\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n// Register necessary components\r\n//let result;\r\n\r\nexport default function Char() {\r\n  const [mapData, setMapData] = useState([]);\r\n  const [dataSet, setDataSet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\r\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\",\r\n        },\r\n      };\r\n      const response = await fetch(url, options);\r\n      const data = await response.json();\r\n      setMapData(data);\r\n      console.log(data);\r\n    }\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  let labels = [],\r\n    k = [],\r\n    datasts = [],\r\n    inc = 10,\r\n    dec = 10;\r\n\r\n  function incr() {\r\n    // setDataPoints((value) => ++value);\r\n    // datasts.splice(0, dataPoints);\r\n  }\r\n  const decr = () => {\r\n    setDataSet((value) => value.splice(0, 1));\r\n    // datasts = datasts.splice(19, 1);\r\n  };\r\n\r\n  if (\r\n    mapData.data &&\r\n    mapData.data.nearby_stores &&\r\n    mapData.data.nearby_stores.stores &&\r\n    !Array.isArray(mapData)\r\n  ) {\r\n    k = mapData.data.nearby_stores.stores;\r\n    labels = k.map((item) => item.location_name);\r\n    labels = labels.splice(0);\r\n    console.log(labels);\r\n    var test = k.map((item) => item.distance);\r\n    setMapData(test);\r\n    //datasts = k.map((item) => item.distance);\r\n    //datasts = datasts.splice(0, 20);\r\n    //console.log(datasts);\r\n  }\r\n  /*\r\n  const data = {\r\n    labels: labels.splice(0, 20),\r\n    datasets: [\r\n      {\r\n        label: \"Api Data Fetched for Location distance wise \",\r\n        data: datasts.splice(0, 20),\r\n        borderColor: \"rgba(75, 192, 192, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true, // Makes the chart responsive\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Nearby Store Distances\",\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true, // y-axis starts at 0\r\n      },\r\n    },\r\n  };\r\n*/\r\n  return (\r\n    <>\r\n      {mapData && (\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"400px\",\r\n            margin: \"0 auto\",\r\n            padding: \"20px\",\r\n            backgroundColor: \"#f9f9f9\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: \"4px 4px 15px rgba(15, 15, 15, 0.1)\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <Bar\r\n            data={{\r\n              labels: labels,\r\n\r\n              datasets: [\r\n                {\r\n                  label: \"Api Data Fetched for Location distance wise \",\r\n                  data: mapData,\r\n                  borderColor: \"rgba(75, 192, 192, 1)\",\r\n                  borderWidth: 1,\r\n                },\r\n              ],\r\n            }}\r\n          />\r\n          <button className=\"btn btn-outline-success\" onClick={incr}>\r\n            INCREASE\r\n          </button>\r\n          <button className=\"btn btn-outline-success\" onClick={decr}>\r\n            DECREASE\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}