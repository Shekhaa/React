{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\javascript\\\\app\\\\src\\\\components\\\\Char.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\n// Register necessary components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function Char() {\n  _s();\n  const [mapData, setMapData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://covid-19-statistics.p.rapidapi.com/provinces?iso=CHN\", {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\n          \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      setMapData(await response.json());\n      console.log(mapData.data);\n    };\n    if (!(mapData && mapData.data && mapData.data.length) > 0) fetchData();\n  }, [mapData]);\n  function getData() {\n    return {\n      labels: mapData.data.map(item => item.province),\n      datasets: [{\n        label: \"\",\n        data: mapData.data.map(item => item.long),\n        backgroundColor: [\"red\", \"yellow\"]\n      }]\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Pie Chart 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), mapData && mapData.data && mapData.data.length > 0 && /*#__PURE__*/_jsxDEV(Pie, {\n                data: getData()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"New Data \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Pie, {\n                data: {\n                  label: [\"Red\", \"Yellow\", \"green\"],\n                  datasets: [{\n                    labels: [\"% of votes\"],\n                    data: [12, 19, 3]\n                  }]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Char, \"fQ/Gw2+pJdXFzH+rIfbNqaPZYyc=\");\n_c = Char;\nvar _c;\n$RefreshReg$(_c, \"Char\");","map":{"version":3,"names":["React","useEffect","useState","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","Card","Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Char","_s","mapData","setMapData","fetchData","response","fetch","method","headers","ok","Error","status","json","console","log","data","length","getData","labels","map","item","province","datasets","label","long","backgroundColor","children","className","md","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/javascript/app/src/components/Char.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\n// Register necessary components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nexport default function Char() {\r\n  const [mapData, setMapData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://covid-19-statistics.p.rapidapi.com/provinces?iso=CHN\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-key\":\r\n              \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\r\n            \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\",\r\n          },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(`Response status: ${response.status}`);\r\n      }\r\n      setMapData(await response.json());\r\n      console.log(mapData.data);\r\n    };\r\n\r\n    if (!(mapData && mapData.data && mapData.data.length) > 0) fetchData();\r\n  }, [mapData]);\r\n\r\n  function getData() {\r\n    return {\r\n      labels: mapData.data.map((item) => item.province),\r\n      datasets: [\r\n        {\r\n          label: \"\",\r\n          data: mapData.data.map((item) => item.long),\r\n          backgroundColor: [\"red\", \"yellow\"],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  return (\r\n    <>\r\n      <Container className=\"my-4\">\r\n        <Row>\r\n          <Col md={4} className=\"mb-4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Pie Chart 1</Card.Title>\r\n                {mapData && mapData.data && mapData.data.length > 0 && (\r\n                  <Pie data={getData()} />\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container className=\"my-4\">\r\n        <Row>\r\n          <Col md={4} className=\"my-4\">\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>New Data </Card.Title>\r\n                <Pie\r\n                  data={{\r\n                    label: [\"Red\", \"Yellow\", \"green\"],\r\n                    datasets: [\r\n                      {\r\n                        labels: [\"% of votes\"],\r\n                        data: [12, 19, 3],\r\n                      },\r\n                    ],\r\n                  }}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,IAAI,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAC3D;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAX,OAAO,CAACY,QAAQ,CAACX,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,eAAe,SAASU,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAA8D,EAC9D;QACEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB;MACF,CACF,CAAC;MACD,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoBL,QAAQ,CAACM,MAAM,EAAE,CAAC;MACxD;MACAR,UAAU,CAAC,MAAME,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;MACjCC,OAAO,CAACC,GAAG,CAACZ,OAAO,CAACa,IAAI,CAAC;IAC3B,CAAC;IAED,IAAI,EAAEb,OAAO,IAAIA,OAAO,CAACa,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC,EAAEZ,SAAS,CAAC,CAAC;EACxE,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,SAASe,OAAOA,CAAA,EAAG;IACjB,OAAO;MACLC,MAAM,EAAEhB,OAAO,CAACa,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;MACjDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,EAAE;QACTR,IAAI,EAAEb,OAAO,CAACa,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,IAAI,CAAC;QAC3CC,eAAe,EAAE,CAAC,KAAK,EAAE,QAAQ;MACnC,CAAC;IAEL,CAAC;EACH;EACA,oBACE7B,OAAA,CAAAE,SAAA;IAAA4B,QAAA,gBACE9B,OAAA,CAACJ,SAAS;MAACmC,SAAS,EAAC,MAAM;MAAAD,QAAA,eACzB9B,OAAA,CAACH,GAAG;QAAAiC,QAAA,eACF9B,OAAA,CAACF,GAAG;UAACkC,EAAE,EAAE,CAAE;UAACD,SAAS,EAAC,MAAM;UAAAD,QAAA,eAC1B9B,OAAA,CAACL,IAAI;YAAAmC,QAAA,eACH9B,OAAA,CAACL,IAAI,CAACsC,IAAI;cAAAH,QAAA,gBACR9B,OAAA,CAACL,IAAI,CAACuC,KAAK;gBAAAJ,QAAA,EAAC;cAAW;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EACnChC,OAAO,IAAIA,OAAO,CAACa,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACC,MAAM,GAAG,CAAC,iBACjDpB,OAAA,CAACX,GAAG;gBAAC8B,IAAI,EAAEE,OAAO,CAAC;cAAE;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CACxB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEZtC,OAAA,CAACJ,SAAS;MAACmC,SAAS,EAAC,MAAM;MAAAD,QAAA,eACzB9B,OAAA,CAACH,GAAG;QAAAiC,QAAA,eACF9B,OAAA,CAACF,GAAG;UAACkC,EAAE,EAAE,CAAE;UAACD,SAAS,EAAC,MAAM;UAAAD,QAAA,eAC1B9B,OAAA,CAACL,IAAI;YAAAmC,QAAA,eACH9B,OAAA,CAACL,IAAI,CAACsC,IAAI;cAAAH,QAAA,gBACR9B,OAAA,CAACL,IAAI,CAACuC,KAAK;gBAAAJ,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCtC,OAAA,CAACX,GAAG;gBACF8B,IAAI,EAAE;kBACJQ,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;kBACjCD,QAAQ,EAAE,CACR;oBACEJ,MAAM,EAAE,CAAC,YAAY,CAAC;oBACtBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;kBAClB,CAAC;gBAEL;cAAE;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACZ,CAAC;AAEP;AAACjC,EAAA,CA9EuBD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}