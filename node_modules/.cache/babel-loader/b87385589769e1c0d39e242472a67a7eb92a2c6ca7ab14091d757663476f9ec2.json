{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\javascript\\\\app\\\\src\\\\components\\\\Char.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register the required components for the chart\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n// Register necessary components\n//let result;\nexport default function Char() {\n  _s();\n  const [mapData, setMapData] = useState([]);\n  //const [use, set] = useState(1);\n  useEffect(() => {\n    async function dataa() {\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\"\n        }\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      setMapData(data);\n      console.log(data);\n    }\n    dataa();\n  }, []);\n  let labels = [],\n    k = [],\n    datasts = [];\n  if (mapData.data && mapData.data.nearby_stores && mapData.data.nearby_stores.stores) {\n    k = mapData.data.nearby_stores.stores;\n    labels = k.map(item => item.location_name);\n    console.log(label);\n    datasts = k.map(item => item.distance);\n    console.log(datasts);\n  }\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: \"Api Data Fetched for Location distance wise \",\n      data: datasts\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Char, \"fQ/Gw2+pJdXFzH+rIfbNqaPZYyc=\");\n_c = Char;\nvar _c;\n$RefreshReg$(_c, \"Char\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Char","_s","mapData","setMapData","dataa","url","options","method","headers","response","fetch","data","json","console","log","labels","k","datasts","nearby_stores","stores","map","item","location_name","label","distance","datasets","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/javascript/app/src/components/Char.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the required components for the chart\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n// Register necessary components\r\n//let result;\r\nexport default function Char() {\r\n  const [mapData, setMapData] = useState([]);\r\n  //const [use, set] = useState(1);\r\n  useEffect(() => {\r\n    async function dataa() {\r\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\r\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\",\r\n        },\r\n      };\r\n      const response = await fetch(url, options);\r\n      const data = await response.json();\r\n      setMapData(data);\r\n      console.log(data);\r\n    }\r\n    dataa();\r\n  }, []);\r\n  let labels = [],\r\n    k = [],\r\n    datasts = [];\r\n  if (\r\n    mapData.data &&\r\n    mapData.data.nearby_stores &&\r\n    mapData.data.nearby_stores.stores\r\n  ) {\r\n    k = mapData.data.nearby_stores.stores;\r\n    labels = k.map((item) => item.location_name);\r\n    console.log(label);\r\n    datasts = k.map((item) => item.distance);\r\n    console.log(datasts);\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Api Data Fetched for Location distance wise \",\r\n        data: datasts,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Bar />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AACD;AACA;AACA,eAAe,SAASM,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACAD,SAAS,CAAC,MAAM;IACd,eAAeoB,KAAKA,CAAA,EAAG;MACrB,MAAMC,GAAG,GAAG,2DAA2D;MACvE,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB;MACF,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,UAAU,CAACQ,IAAI,CAAC;MAChBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB;IACAP,KAAK,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EACN,IAAIW,MAAM,GAAG,EAAE;IACbC,CAAC,GAAG,EAAE;IACNC,OAAO,GAAG,EAAE;EACd,IACEf,OAAO,CAACS,IAAI,IACZT,OAAO,CAACS,IAAI,CAACO,aAAa,IAC1BhB,OAAO,CAACS,IAAI,CAACO,aAAa,CAACC,MAAM,EACjC;IACAH,CAAC,GAAGd,OAAO,CAACS,IAAI,CAACO,aAAa,CAACC,MAAM;IACrCJ,MAAM,GAAGC,CAAC,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,aAAa,CAAC;IAC5CT,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IAClBN,OAAO,GAAGD,CAAC,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACG,QAAQ,CAAC;IACxCX,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC;EACtB;EAEA,MAAMN,IAAI,GAAG;IACXI,MAAM,EAAEA,MAAM;IACdU,QAAQ,EAAE,CACR;MACEF,KAAK,EAAE,8CAA8C;MACrDZ,IAAI,EAAEM;IACR,CAAC;EAEL,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eACE9B,OAAA,CAACV,GAAG;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACP,CAAC;AAEP;AAAC7B,EAAA,CAnDuBD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}