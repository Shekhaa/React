{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\javascript\\\\app\\\\src\\\\components\\\\Char.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register the required components for the chart\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n// Register necessary components\n//let result;\nexport default function Char() {\n  _s();\n  const [mapData, setMapData] = useState([null]);\n  //const [use, set] = useState(1);\n  useEffect(() => {\n    async function dataa() {\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\"\n        }\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      setMapData(data);\n      //console.log(data);\n    }\n    dataa();\n  }, []);\n  console.log(label);\n  //console.log()\n  /*let k = mapData.data.nearby_stores.stores;\r\n  let label = k.map((item) => item.location_name);\r\n  \n  let datasts = k.map((item) => item.distance);\r\n  console.log(datasts);*/\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [label],\n        datasets: [{\n          label: \"Api Data Fetched for Location distance wise \",\n          data: {\n            datasts\n          },\n          backgroundColor: \"rgba(75, 192, 192, 0.6)\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Char, \"QsZYJgElujXsz3pqvdHviYkjSQ0=\");\n_c = Char;\nvar _c;\n$RefreshReg$(_c, \"Char\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","Char","_s","mapData","setMapData","dataa","url","options","method","headers","response","fetch","data","json","console","log","label","children","labels","datasets","datasts","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/javascript/app/src/components/Char.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register the required components for the chart\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n// Register necessary components\r\n//let result;\r\nexport default function Char() {\r\n  const [mapData, setMapData] = useState([null]);\r\n  //const [use, set] = useState(1);\r\n  useEffect(() => {\r\n    async function dataa() {\r\n      const url = \"https://target1.p.rapidapi.com/stores/v2/list?place=10009\";\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"6eb69c2aa1mshddf27456becc191p108768jsn5185fd3a034a\",\r\n          \"x-rapidapi-host\": \"target1.p.rapidapi.com\",\r\n        },\r\n      };\r\n      const response = await fetch(url, options);\r\n      const data = await response.json();\r\n      setMapData(data);\r\n      //console.log(data);\r\n    }\r\n    dataa();\r\n  }, []);\r\n  console.log(label);\r\n  //console.log()\r\n  /*let k = mapData.data.nearby_stores.stores;\r\n  let label = k.map((item) => item.location_name);\r\n \r\n  let datasts = k.map((item) => item.distance);\r\n  console.log(datasts);*/\r\n  return (\r\n    <>\r\n      <Bar\r\n        data={{\r\n          labels: [label],\r\n          datasets: [\r\n            {\r\n              label: \"Api Data Fetched for Location distance wise \",\r\n              data: { datasts },\r\n              backgroundColor: \"rgba(75, 192, 192, 0.6)\",\r\n            },\r\n          ],\r\n        }}\r\n      ></Bar>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AACD;AACA;AACA,eAAe,SAASM,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;EAC9C;EACAD,SAAS,CAAC,MAAM;IACd,eAAeoB,KAAKA,CAAA,EAAG;MACrB,MAAMC,GAAG,GAAG,2DAA2D;MACvE,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB;MACF,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,UAAU,CAACQ,IAAI,CAAC;MAChB;IACF;IACAP,KAAK,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EACNS,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAClB;EACA;AACF;AACA;AACA;AACA;EACE,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA,CAACV,GAAG;MACFyB,IAAI,EAAE;QACJM,MAAM,EAAE,CAACF,KAAK,CAAC;QACfG,QAAQ,EAAE,CACR;UACEH,KAAK,EAAE,8CAA8C;UACrDJ,IAAI,EAAE;YAAEQ;UAAQ,CAAC;UACjBC,eAAe,EAAE;QACnB,CAAC;MAEL;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACP,CAAC;AAEP;AAACvB,EAAA,CA5CuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}